syntax = "proto3";
package user_manager;

message Registration {
    string username = 1;
    string password = 2;
    string vehicle = 3;
}
 
message RegistrationResponse {
    RegistrationResult result = 1;
}

enum RegistrationResult  {
    RegistrationSuccess = 0; 
    UserAlreadyExists = 1;
    RegistrationUnknownError = -1;
}

message Login {
    string username = 1;
    string password = 2;
}

message LoginResponse {
    LoginResult result = 1;
    bytes uuid = 2; 
    uint64 duration = 3;
}

enum LoginResult {
    LoginSuccess = 0;
    InvalidPassword = 1;
    DoesNotExist = 2;
    LoginUnknownError = -1;
}

service UserManager {
    rpc RegisterUser (Registration) returns (RegistrationResponse);  
    rpc LoginUser (Login) returns (LoginResponse);
}

message Route {
    repeated Event events = 1;
}

message Routes {
    repeated Route route = 1;
}

message Event {
    string location = 1;
}

message RouteResponse {
    RouteResult result = 1;
}

enum RouteResult {
    Success = 0;
    UnknownError = -1;
}

message Empty {}

service RouteManager {
    rpc AddRoute (Route) returns (RouteResponse);
    rpc GetRoutes (Empty) returns (Route);
}
